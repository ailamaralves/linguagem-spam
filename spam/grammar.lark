start  : cmd*

?cmd : ifcmd
     | forcmd
     | whilecmd
     | returncmd
     | printcmd
     | defcmd
     | simplecmd
     | atrib

ifcmd : expr "," ("taokei" | "talkei") "?" block elsecmd?

elsecmd : "ele" "não" "!" block

forcmd : "companheiro" "," NOME "em" expr "é" "golpe" "!" block

whilecmd : "(" expr ")" "gloria" "a" "deux" "!" block

returncmd : expr "lula" "livre" "!"

printcmd : "(" expr ")" "grande" "dia" "!"
         | "(" atom ")" "grande" "dia" "!"

defcmd : "repare" "bem" atom "(" atom ")" ":" block

block : ("4" "anos" | "4") cmd* ("impeachment" | "imp" )

simplecmd : expr ";"

atrib : NOME "=" expr ";"
      

?expr : atom 
      | "(" atom ")"
      | comp
      | call
      | list
      | operation

list : "[" expr ("," expr)* "]"
     | "[" "]"

operation : expr OP expr

?comp : expr "==" expr
      | expr ">" expr
      | expr ">=" expr
      | expr "<" expr
      | expr "<=" expr
      | expr "||" expr
      | expr "&&" expr

call : NOME "(" args? ")"

args : expr ("," expr)*

?atom   : INT    -> vento
        | FLOAT  -> dobrarameta
        | NOME   -> nome
        | STRING -> mandioca
        | TRUE   -> lavajato
        | FALSE  -> corrupcao
        
// Terminais
NOME    : /[a-zA-Z_][\w_]*/
STRING  : /\"[^\"\\]*(\\[^\n\t\r\f][^\"\\]*)*\"/
INT     : /-?\d+/
FLOAT   : /-?\d+\.\d+/
TRUE    : /\#lavajato/
FALSE   : /\#corrupcao/
OP      : /[-+*\/]/

%ignore /\s+/
%ignore /\/\/[^\n]*/